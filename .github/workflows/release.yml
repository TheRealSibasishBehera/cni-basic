name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: make test

    - name: Build release
      run: make release

    - name: Generate changelog
      run: |
        echo "## Changes" > CHANGELOG.md
        git log $(git describe --tags --abbrev=0 HEAD~1)..HEAD --pretty=format:"- %s" >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

    - name: Upload Linux AMD64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/release/cni-basic-${{ github.ref_name }}-linux-amd64.tar.gz
        asset_name: cni-basic-${{ github.ref_name }}-linux-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Linux ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/release/cni-basic-${{ github.ref_name }}-linux-arm64.tar.gz
        asset_name: cni-basic-${{ github.ref_name }}-linux-arm64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Darwin AMD64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/release/cni-basic-${{ github.ref_name }}-darwin-amd64.tar.gz
        asset_name: cni-basic-${{ github.ref_name }}-darwin-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Darwin ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/release/cni-basic-${{ github.ref_name }}-darwin-arm64.tar.gz
        asset_name: cni-basic-${{ github.ref_name }}-darwin-arm64.tar.gz
        asset_content_type: application/gzip